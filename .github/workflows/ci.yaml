name: Release main application

on: [push]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  GKE_CLUSTER: dwk-cluster-2
  GKE_ZONE: europe-central2-a
  DEPLOYMENT_NAME: main-app-dep
  IMAGE_ONE: main-1
  IMAGE_TWO: main-2

jobs:
  build-publish-and-deploy:
    name: Build, publish and run main application
    runs-on: ubuntu-latest
    
    steps:
     - name: Checkout
       uses: actions/checkout@v2
    
     - name: Setup GCP connection
       uses: google-github-actions/setup-gcloud@master
       with:
        project_id: ${{ secrets.GKE_PROJECT_ID }}
        service_account_key: ${{ secrets.GKE_SA_KEY }}
  
     - name: Authenticate
       run: gcloud --quiet auth configure-docker

     - name: Get credentials
       run: gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE

     - name: Create first image and push it to a registry
       run: |-
        echo "IMAGE_ONE_WITH_TAG=gcr.io/${{ secrets.GKE_PROJECT_ID }}/$IMAGE_ONE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" >> $GITHUB_ENV
        
     - run: docker build -t "$IMAGE_ONE_WITH_TAG" .
     - run: docker push "$IMAGE_ONE_WITH_TAG"
      
     - name: Create second image and push it to a registry
       run: |-
        echo "IMAGE_TWO_WITH_TAG=gcr.io/$PROJECT_ID/$IMAGE_TWO:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" >> $GITHUB_ENV
        docker build -t "$IMAGE_TWO_WITH_TAG"./main2/
        docker push "$IMAGE_TWO_WITH_TAG"
      
     - name: Setup Kustomize
       run: |
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    
     - name: Deploy on GKE
       run: |
        cd deploy
        kubectl create namespace ${GITHUB_REF#refs/heads/} || true
        kubectl config set-context --current --namespace=${GITHUB_REF#refs/heads/}
        ../kustomize edit set namespace ${GITHUB_REF#refs/heads/}
        ../kustomize edit set image MAIN-ONE-IMAGE=$IMAGE_ONE_WITH_TAG
        ../kustomize edit set image MAIN-TWO-IMAGE=$IMAGE_TWO_WITH_TAG
        kubectl apply -k .
        kubectl rollout status deployment/$DEPLOYMENT_NAME  

    

